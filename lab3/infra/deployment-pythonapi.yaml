apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-api-deployment
  namespace: w255
spec:
  replicas: 3
  selector:
    matchLabels:
      app: lab3api
  template:
    metadata:
      labels:
        app: lab3api
    spec:
      initContainers:
      - name: init-verify-redis-service-dns
        image: busybox:1.36
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c']
        args:
          - |
            for i in $(seq 1 60); do
              nslookup redis-service.w255.svc.cluster.local && exit 0
              echo "Waiting for redis service DNS... Attempt $i/60"
              sleep 2
            done
            exit 1
      - name: init-verify-redis-ready
        image: busybox:1.36
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c']
        args:
          - |
            for i in $(seq 1 60); do
              nc -z -v redis-service.w255.svc.cluster.local 6379 && exit 0
              echo "Waiting for redis to be ready... Attempt $i/60"
              sleep 2
            done
            exit 1
      containers:
      - name: lab3api
        image: lab3:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
        env:
        - name: REDIS_URL
          value: "redis://redis-service.w255.svc.cluster.local:6379"
        startupProbe:
          httpGet:
            path: /lab/health
            port: 8000
          failureThreshold: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /lab/health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /lab/health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi